extends layout

block header
	script(src='/js/bootstrap-select.min.js')
	link(rel='stylesheet', href='/css/bootstrap-select.min.css')

block content
	.col-xs-12.page-header
		h2.text-info
			b Judging Homework

	.row
		.col-xs-6.form-group
			label(for='selectUser')
				| User
				| #[small.text-muted (Multiple selection)]
			select.form-control.selectpicker#selectUser(multiple, title='All', data-actions-box='true', data-live-search='true')
				each student in userList
					option(value=student.studentId, data-subtext=student.studentId)=decodeURIComponent(student.name)

		.col-xs-6.form-group
			label(for='selHomework') Homework
			select.form-control.selectpicker#selHomework
				each problem in problemList
					option(value=problem.id, selected=currentId == problem.id ? "" : undefined)=decodeURIComponent(problem.name)

	a(href='/homework/' + currentId, download)
		h2 #[i.fa.fa-download] Download all as zip

	each student in userList
		if perStudentEntry.hasOwnProperty(student.studentId)
			.col-xs-12.col-sm-6.col-md-4.homework-table
				h3
					strong=decodeURIComponent(student.name)
					| &nbsp
					small=student.studentId
					a.pull-right(href=`/homework/${currentId}?studentId=${student.studentId}`, download)
						| #[i.fa.fa-download] zip

				.table-responsive
					table.table.table-bordered.table-striped.table-hover
						thead
							tr
								th File name
								th Submitted time
						tbody
							each entry in perStudentEntry[student.studentId]
								tr
									td
										- const extension = entryInfo[entry.entryId].extension;
										- const name = entryInfo[entry.entryId].name;
											if extension.valueOf() !== 'zip' && extension.valueOf() !== 'report'
												a.btn-link(role='button' onclick=`codeModal("/homework/entry/${entry.logId}", "${extension}", "${name}")`)=name
											else
												| #{name}

											a.btn-link.pull-right(href='/homework/entry/' + entry.logId)
												i.fa.fa-download
									td=new Date(entry.submitted).toLocaleString()

	script(type='text/javascript').
		const col = document.documentElement.clientWidth >= 992 ? 3 : 2;
		const cards = $('.homework-table');
		for (let i = 0; i < cards.length; i += col) {
			cards.slice(i, i + col).wrapAll('<div class="row"></div>');
		}

		const $selHomework = $('#selHomework');

		function homeworkChangeHandler() {
			const id = $selHomework.val();
			document.location.href = '/homework/judge/' + id;
		}

		if (/Android|webOS|iPhone|iPad|iPod|BlackBerry/i.test(navigator.userAgent)) {
			$selHomework.selectpicker('mobile');
			$selHomework.change(homeworkChangeHandler);
		}
		else {
			$selHomework.on('changed.bs.select', homeworkChangeHandler);
		}

	include modal-source_code